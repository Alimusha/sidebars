* {
  outline: 1px solid red;
}

:root {
  --landscape-width: 25vw;
  --portrait-width: 80vw;
  --header-height: 4rem;
  --secs: 0.4s;
  --bg-left: springgreen;
  --bg-right: cyan;
  --bg-main: lemonchiffon;
}

body {
  min-height: 100vh;
  max-width: 100vw;
  margin: 0;
  overflow: hidden; // Disable scrolling on body
}

// Grid definition:
#layout {
  display: grid;
  grid-template-columns: auto 1fr  auto;
  grid-template-areas:  'left main right';
}

// Grid area ID's:
#main { grid-area: main;
  background: var(--bg-main);
  .header {
    background: linear-gradient(to right, var(--bg-left), var(--bg-right));
  }
}

#left { grid-area: left;
  .sidebar { background: var(--bg-left);
    &.closed { transform: translateX(-100%); }
  }
  .header { left: var(--header-height); }
  .icon { left: 0; }
}

#right { grid-area: right;
  .sidebar { background: var(--bg-right);
    @media (orientation: portrait) { 
      &.open { transform: translateX(-100%); }
    }
  }
  .icon { right: 0; }
}

#left, #right { width: 0;
  transition: width var(--secs);
  @media (orientation: landscape) {
    &.open { width: var(--landscape-width); }
  }
}

// Styles in common for classes used in grid areas:
.icon { position: fixed; top: 0;
  z-index: 10; cursor: pointer;
  width: var(--header-height);
  height: var(--header-height);
  line-height: var(--header-height);
  font-size: var(--header-height);
  text-align: center; user-select: none;
}
.sidebar { width: var(--landscape-width);
  @media (orientation: portrait) { width: var(--portrait-width); }
  .header { width: calc(100% - var(--header-height)); }
  transition: transform var(--secs);
  transform: translateX(0%);
}
.header { position: relative; top: 0;
  height: var(--header-height);
  line-height: var(--header-height); /* Vertical center */
  text-align: center; /* Horizontal center */
}
.content {
  text-align: center;
  line-height: calc(100vh - var(--header-height));
}